These are my lesson 2 reflections.

Files go to the staging area, then get commited.

Use git status to see what is up.

Use git add to move to the staging area, then git commit to move to the repository.

COMMANDS:

git init:	 this will initalize the repository

git add [file]:  this moves a file from the directory to the staging area

git commit:  moves every file from the staging area to the repository.

git diff --staged:  the difference between the staging area and the repository.

git reset --hard:  discards ANY CHANGES in the working directory and staging area.  BE CAREFUL!!! YOU CANT REVERSE A RESET!

git checkout -b [new_branch_name]:  Checks out an old commit and creates a new branch there so we can see what is happening


REFLECTIONS

1.  Staging area helps you make sure you only make 1 logical change at a time.  You can put things in the staging area one at a time.

2.  Branches will be extremely useful when adding experimental features that may break a version or demo.  Very excited about this git feature.  Also keeps history very organized.

GREAT IDEA:  Master branch always works.  You have developmental branches, and experimental branches. 

MASTER BRANCH SHOULD ALWAYS WORK.

